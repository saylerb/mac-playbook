---
- hosts: local
  gather_facts: false
  vars: 
    full_name:  "{{ lookup('env', 'NAME') }}"
    email: "{{ lookup('env', 'EMAIL') }}"
    user: "{{ lookup('env', 'USER') }}"
    github_key: "{{ lookup('env', 'GITHUB_API_TOKEN') }}"

  tasks:
  - name: generate an shh key
    command: ssh-keygen -t rsa -b 4096 -C {{ email }} -N "" -f ~/.ssh/id_rsa
    args:
      creates: ~/.ssh/id_rsa 

  - name: save public key to variable
    set_fact:
      public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  - name: getup global git config
    git_config:
      name: user.name
      scope: global
      value: "{{ full_name }}"
  
  - name: list out global git config
    git_config:
      list_all: yes
      scope: global

  - name: add public key to github
    shell: |
      curl -H "Content-Type: application/json"\
           -H "Authorization: token $GITHUB_API_TOKEN"\
           --data '{"title":"mac-ansible-token", "key":"'"{{ public_key }}"'"}'\
           https://api.github.com/user/keys

  - name: make sure zsh version is greater than 4.3.9
    shell: zsh --version | cut -d ' ' -f2
    register: result
    changed_when: "false"

  - assert:
      that: result | version_compare ('4.3.9', '>=')
      msg: "zsh must be greater or equal to 4.3.9"

  - name: assert that default shell is zsh
    shell: >
      dscl . -read /Users/{{ user }} UserShell |
      awk '{ gsub("UserShell: ", "") ; print $0 }'
    register: result

  - assert:
      that: result.stdout == "/bin/zsh"

  - name: check if ~/.zshrc exists
    stat:
      path: ~/.zshrc
    register: zshrc

  - debug:
      msg: "{{ zshrc }}"

  - name: backing up existing ~/.zshrc if it exists
    copy:
      src: ~/.zshrc
      dest: ~/.zshrc.orig
      backup: yes
    when: zshrc.stat.exists == True
    register: backup

  - debug:
      msg: "{{ backup }}"

  - name: clone down oh-my-zsh
    git:
      repo: https://github.com/robbyrussell/oh-my-zsh
      dest: ~/.oh-my-zsh
    when: zshrc.stat.exists == False
    register: cloning_zsh

  - name: creating new ~/.zshrc from oh-my-zsh template
    copy:
      src: ~/.oh-my-zsh/templates/zshrc.zsh-template
      dest: ~/.zshrc
    when: zshrc.stat.exists == False and cloning_zsh|success

  - include: brew.yml
